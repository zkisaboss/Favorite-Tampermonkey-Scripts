// ==UserScript==
// @name          Youtube HD
// @description   Select a youtube resolution and resize the player.
// @icon          https://icons.iconarchive.com/icons/dakirby309/simply-styled/128/YouTube-icon.png
// @author        Zachary Kosove
// @version       0.1
// @match         https://www.youtube.com/*
// @grant         none
// @noframes
// ==/UserScript==
(function() {
    "use strict";

    const changeResolution = true;
    const targetRes = "hd1080";
    //   "highres" >= (4320p / UHD)
    //   "hd2880"   = (2880p / UHD+)
    //   "hd2160"   = (2160p / UHD)
    //   "hd1440"   = (1440p / QHD)
    //   "hd1080"   = (1080p / FHD)
    //   "hd720"    = (720p  / HD)
    //   "large"    = (480p)
    //   "medium"   = (360p)
    //   "small"    = (240p)
    //   "tiny"     = (144p)

    const highFramerateTargetRes = null;
    const changePlayerSize = false;
    const useCustomSize = false;
    const customHeight = 600;
    const autoTheater = false;
    const flushBuffer = true;
    const allowCookies = true;
    const setResolutionEarly = true;
    const enableErrorScreenWorkaround = true;
    const DEBUG = false;
    const resolutions = ['highres', 'hd2880', 'hd2160', 'hd1440', 'hd1080', 'hd720', 'large', 'medium', 'small', 'tiny'];
    const heights = [4320, 2880, 2160, 1440, 1080, 720, 480, 360, 270, 270];

    const unwrapElement = x => x;

    let doc = document,
        win = window;
    let recentVideo = "";
    let foundHFR = false;
    let setHeight = 0;

    function debugLog(message) {
        if (DEBUG) {
            console.log("YTHD | " + message);
        }
    }
    function getVideoIDFromURL(ytPlayer) {
        const idMatch = /(?:v=)([\w\-]+)/;
        let id = "ERROR: idMatch failed; youtube changed something";
        let matches = idMatch.exec(ytPlayer.getVideoUrl());
        if (matches) {
            id = matches[1];
        }

        return id;
    }
    function setResolution(ytPlayer, resolutionList) {
        debugLog("Setting Resolution...");

        const currentQuality = ytPlayer.getPlaybackQuality();
        let res = targetRes;

        if (highFramerateTargetRes && foundHFR) {
            res = highFramerateTargetRes;
        }
        if (resolutionList.indexOf(res) >= resolutionList.indexOf(currentQuality)) {
            if (ytPlayer.setPlaybackQualityRange !== undefined) {
                ytPlayer.setPlaybackQualityRange(res);
            }
            ytPlayer.setPlaybackQuality(res);
            debugLog("Resolution Set To: " + res);
            return;
        }

        const end = resolutionList.length - 1;
        let nextBestIndex = Math.max(resolutionList.indexOf(res), 0);
        let ytResolutions = ytPlayer.getAvailableQualityLevels();
        debugLog("Available Resolutions: " + ytResolutions.join(", "));

        while ((ytResolutions.indexOf(resolutionList[nextBestIndex]) === -1) && nextBestIndex < end) {
            ++nextBestIndex;
        }

        if (flushBuffer && currentQuality !== resolutionList[nextBestIndex]) {
            let id = getVideoIDFromURL(ytPlayer);
            if (id.indexOf("ERROR") === -1) {
                let pos = ytPlayer.getCurrentTime();
                ytPlayer.loadVideoById(id, pos, resolutionList[nextBestIndex]);
            }

            debugLog("ID: " + id);
        }
        if (ytPlayer.setPlaybackQualityRange !== undefined) {
            ytPlayer.setPlaybackQualityRange(resolutionList[nextBestIndex]);
        }
        ytPlayer.setPlaybackQuality(resolutionList[nextBestIndex]);

        debugLog("Resolution Set To: " + resolutionList[nextBestIndex]);
    }
    function setResOnReady(ytPlayer, resolutionList) {
        if (ytPlayer.getPlaybackQuality === undefined) {
            win.setTimeout(setResOnReady, 100, ytPlayer, resolutionList);
        } else {
            let framerateUpdate = false;
            if (highFramerateTargetRes) {
                let features = ytPlayer.getVideoData().video_quality_features;
                if (features) {
                    let isHFR = features.includes("hfr");
                    framerateUpdate = isHFR && !foundHFR;
                    foundHFR = isHFR;
                }
            }

            let curVid = getVideoIDFromURL(ytPlayer);
            if ((curVid !== recentVideo) || framerateUpdate) {
                recentVideo = curVid;
                setResolution(ytPlayer, resolutionList);

                let storedQuality = localStorage.getItem("yt-player-quality");
                if (!storedQuality || storedQuality.indexOf(targetRes) === -1) {
                    let tc = Date.now(),
                        te = tc + 2592000000;
                    localStorage.setItem("yt-player-quality", "{\"data\":\"" + targetRes + "\",\"expiration\":" + te + ",\"creation\":" + tc + "}");
                }
            }
        }
    }
    function setTheaterMode(ytPlayer) {
        debugLog("Setting Theater Mode");

        if (win.location.href.indexOf("/watch") !== -1) {
            let pageManager = unwrapElement(doc.getElementsByTagName("ytd-watch-flexy")[0]);

            if (pageManager) {
                if (enableErrorScreenWorkaround) {
                    const styleContent = "#error-screen { z-index: 42 !important } .ytp-error { display: none !important }";

                    let errorStyle = doc.getElementById("ythdErrorWorkaroundStyleSheet");
                    if (!errorStyle) {
                        errorStyle = doc.createElement("style");
                        errorStyle.type = "text/css";
                        errorStyle.id = "ythdStyleSheet";
                        errorStyle.innerHTML = styleContent;
                        doc.head.appendChild(errorStyle);
                    } else {
                        errorStyle.innerHTML = styleContent;
                    }
                }
                }

                try {
                    pageManager.theaterModeChanged_(true);
                } catch (e) {
            }
        }
    }

    function computeAndSetPlayerSize() {
        let height = customHeight;
        if (!useCustomSize) {
            let heightOffsetEl = doc.getElementById("masthead");
            let mastheadContainerEl = doc.getElementById("masthead-container");
            let mastheadHeight = 50,
                mastheadPadding = 16;
            if (heightOffsetEl && mastheadContainerEl) {
                mastheadHeight = parseInt(win.getComputedStyle(heightOffsetEl).height, 10);
                mastheadPadding = parseInt(win.getComputedStyle(mastheadContainerEl).paddingBottom, 10) * 2;
            }

            let i = Math.max(resolutions.indexOf(targetRes), 0);
            height = Math.min(heights[i], win.innerHeight - (mastheadHeight + mastheadPadding));
        }

        resizePlayer(height);
    }
    function resizePlayer(height) {
        debugLog("Setting video player size");

        if (setHeight === height) {
            debugLog("Player size already set");
            return;
        }
        let styleContent = "ytd-watch-flexy[theater]:not([fullscreen]) #player-theater-container.style-scope {" +
			"min-height: " + height + "px !important; max-height: none !important; height: " + height + "px !important }";
        let ythdStyle = doc.getElementById("ythdStyleSheet");
        if (!ythdStyle) {
            ythdStyle = doc.createElement("style");
            ythdStyle.type = "text/css";
            ythdStyle.id = "ythdStyleSheet";
            ythdStyle.innerHTML = styleContent;
            doc.head.appendChild(ythdStyle);
        } else {
            ythdStyle.innerHTML = styleContent;
        }
        setHeight = height;
        win.dispatchEvent(new Event("resize"));
    }
    function main() {
        let ytPlayer = doc.getElementById("movie_player") || doc.getElementsByClassName("html5-video-player")[0];
        let ytPlayerUnwrapped = unwrapElement(ytPlayer);

        if (autoTheater && ytPlayerUnwrapped) {
            if (allowCookies && doc.cookie.indexOf("wide=1") === -1) {
                doc.cookie = "wide=1; domain=.youtube.com";
            }

            setTheaterMode(ytPlayerUnwrapped);
        }
        if (changePlayerSize && win.location.host.indexOf("youtube.com") !== -1 && win.location.host.indexOf("gaming.") === -1) {
            computeAndSetPlayerSize();
            window.addEventListener("resize", computeAndSetPlayerSize, true);
        }
        if (changeResolution && setResolutionEarly && ytPlayerUnwrapped) {
            setResOnReady(ytPlayerUnwrapped, resolutions);
        }
        if (changeResolution || autoTheater) {
            win.addEventListener("loadstart", function(e) {
                if (!(e.target instanceof win.HTMLMediaElement)) {
                    return;
                }
                ytPlayer = doc.getElementById("movie_player") || doc.getElementsByClassName("html5-video-player")[0];
                ytPlayerUnwrapped = unwrapElement(ytPlayer);
                if (ytPlayerUnwrapped) {
                    debugLog("Loaded new video");
                    if (changeResolution) {
                        setResOnReady(ytPlayerUnwrapped, resolutions);
                    }
                    if (autoTheater) {
                        setTheaterMode(ytPlayerUnwrapped);
                    }
                }
            }, true);
        }
        win.removeEventListener("yt-navigate-finish", main, true);
    }
    main();
    win.addEventListener("yt-navigate-finish", main, true);

})();
